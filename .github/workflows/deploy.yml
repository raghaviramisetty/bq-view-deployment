name: CI

on:
  push:
    branches: [ "dev","main" ]
  pull_request:
    branches: [ "dev","main" ]
  workflow_dispatch:

jobs:
  metadata:
    name: Read project Id and dataset
    runs-on: ubuntu-latest
    outputs: 
      Deployment: ${{steps.set.outputs.deployment}}
    steps:
      - uses: actions/checkout@v3
      - name: parse itv.yaml
        id: set
        run: |
          echo "Reading config for branch: $GITHUB_REF_NAME"
          deployment=$(yq -o=json '.deployment[]| select (.value.ref == "'$GITHUB_REF_NAME'")' itv.yaml)
          echo "deployment=$deployment" >> $GITHUB_OUTPUT
        
  deploy:
    needs: metadata
#    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to GCP (Dev)
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_DEV_CREDS }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v1

      - name: Create dataset & deploy views and tables to Dev
        run: | 
          DEPLOYMENT_JSON='${{ needs.metadata.outputs.deployment }}'
          PROJECT_ID=$(echo "$DEPLOYMENT_JSON" |jq -r '.project_id')
          DATASET=$(echo "$DEPLOYMENT_JSON" | jq -r '.dataset')

          echo "Using PROJECT_ID=$PROJECT_ID"
          echo "Using DATASET=$DATASET"
          echo "Creating datset..."
          bq --location=US mk --dataset --project_id="$PROJECT_ID" "$DATASET" || echo "dataset may already exist"
          echo "files found:"
          ls -l tables/
          for file in views/*.sql; do
            echo "Deploying $file to Dev project..."
             bq query --use_legacy_sql=false --project_id=fluid-analogy-459522-a0 "$(cat $file)"
          done
          for file in tables/*.sql; do
            echo "Deploying $file to Dev project..."
             bq query --use_legacy_sql=false --project_id=fluid-analogy-459522-a0 "$(cat $file)"
          done
